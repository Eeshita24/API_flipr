from flask import Flask, request, jsonify
import uuid

app = Flask(__name__)

# Sample data to store customer, purchase order, and shipping details
customers = []
purchase_orders = []
shipping_details = []

# API endpoint to add shipping details
@app.route('/add_shipping_details', methods=['POST'])
def add_shipping_details():
    data = request.get_json()

    # Ensure all required fields are present
    required_fields = ['customer_id', 'purchase_order_id', 'address', 'city', 'pincode']
    if not all(field in data for field in required_fields):
        return jsonify({'error': 'Missing required fields'}), 400

    # Check if customer ID exists
    customer_id = data['customer_id']
    customer = next((c for c in customers if c['id'] == customer_id), None)
    if not customer:
        return jsonify({'error': 'Customer not found'}), 404

    # Check if purchase order ID exists
    purchase_order_id = data['purchase_order_id']
    purchase_order = next((po for po in purchase_orders if po['id'] == purchase_order_id), None)
    if not purchase_order:
        return jsonify({'error': 'Purchase order not found'}), 404

    # Generate a unique shipping details ID
    shipping_details_id = str(uuid.uuid4())

    # Create a new shipping details object
    new_shipping_details = {
        'id': shipping_details_id,
        'customer_id': customer_id,
        'purchase_order_id': purchase_order_id,
        'address': data['address'],
        'city': data['city'],
        'pincode': data['pincode']
    }

    # Add the shipping details to the list
    shipping_details.append(new_shipping_details)

    return jsonify({'message': 'Shipping details added successfully', 'shipping_details_id': shipping_details_id}), 201

# Run the Flask app
if __name__ == '__main__':
    app.run(debug=True)
